@model Motonet.Models.Annonce

@section Styles {
    <link href="~/Content/chosen.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-fileinput/css/fileinput.css" rel="stylesheet" />
}

@{
    ViewBag.Title = "Ajouter une annonce";
}

<h2>Mon annonce</h2>

@using (Html.BeginForm("Create", "Annonces", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />

        <fieldset>

            <h5>Ce que vous proposez:</h5>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Titre, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = 10, maxLength = @ViewBag.nombreMaxCaracteresDescription } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MotoProposeeID, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.DropDownList("MotoProposeeID", (SelectList)ViewBag.MotoProposeeID, new { @class = "chosen-select form-control" })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.MotoProposeeID, "", new { @class = "text-danger" })
                </div>
            </div>
                        
            <div class="form-group">
                @Html.LabelFor(model => model.Photos, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <input type="file" class="file" multiple id="photos" name="photos" data-language="fr" accept="image/*" data-show-upload="false" data-max-file-count=@ViewBag.nombreMaxdePhotos data-max-file-size=@ViewBag.tailleMaxiUploadEnOctet />
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Photos, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Annee, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Annee, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Annee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Kilometrage, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Kilometrage, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Kilometrage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Prix, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Prix, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Prix, "", new { @class = "text-danger" })
                </div>
            </div>

        </fieldset>

        <fieldset>

            <h5>Et pourquoi pas un échange?</h5>

            <p>Vous pouvez choisir des modèles précis</p>

            <div class="form-group">
                @Html.LabelFor(model => model.MotosAccepteesID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("MotosAccepteesID", null, String.Empty, new { multiple = "multiple", @class = "chosen-select form-control" })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.MotosAccepteesID, "", new { @class = "text-danger" })
                </div>
            </div>

            <p>Ou choisir une combinaison marque/genre</p>

            <div class="form-group">
                @Html.LabelFor(model => model.MarquesAccepteesID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5 toolTipClass">
                    @Html.DropDownList("MarquesAccepteesID", null, String.Empty, new { multiple = "multiple", @class = "chosen-select form-control", data_toggle = "tooltip", title = "Renseignez le genre et laissez ce champ vide si toutes les marques vous conviennent" })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.MarquesAccepteesID, "", new { @class = "text-danger" })
                </div>
            </div>
                        
            <div class="form-group">
                @Html.LabelFor(model => model.GenresAcceptesID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5 toolTipClass">
                    @Html.DropDownList("GenresAcceptesID", null, String.Empty, new { multiple = "multiple", @class = "chosen-select form-control", data_toggle = "tooltip", title = "Renseignez la marque et laissez ce champ vide si tous les genres vous conviennent" })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.GenresAcceptesID, "", new { @class = "text-danger" })
                </div>
            </div>

        </fieldset>

        <fieldset>

            <h5>A propos de vous:</h5>

            <div class="form-group">
                @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DepartementID, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.DropDownList("DepartementID", (SelectList)ViewBag.DepartementID, new { @class = "chosen-select form-control" })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.DepartementID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MotDePasse, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.MotDePasse, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.MotDePasse, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmerMotDePasse, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ConfirmerMotDePasse, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-5">
                    @Html.ValidationMessageFor(model => model.ConfirmerMotDePasse, "", new { @class = "text-danger" })
                </div>
            </div>

        </fieldset>

        
        <div>
            <input type="submit" value="Créer l'annonce" class="btn btn-primary" />
        </div>
        

</div>
}


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")


    <script src="~/Scripts/chosen.jquery.js"></script>
    <script src="~/Scripts/fileinput.js"></script>
    <script src="~/Scripts/fileinput_locale_fr.js"></script>

    <script type="text/javascript">
        $(".chosen-select").chosen({ placeholder_text_multiple: "Choisir plusieurs éléments", placeholder_text_single: "Choisir un élément", no_results_text: "Pas de résultat pour" })

        //$('form').validate({
        //    ignore: ":hidden:not(.chosen-select)"
        //});

        

        $('.chosen-container').tooltip({ placement: 'right' });
        

    </script>

}
