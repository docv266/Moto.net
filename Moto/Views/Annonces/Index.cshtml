@model PagedList.IPagedList<Motonet.Models.Annonce>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Moto échange</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<br />
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort }))
<br />

<table class="table">
    <tr>
        <th>
            Titre
        </th>
        <th>
            Modèle
        </th>
        <th>
            Photo principale
        </th>
        <th>
            @Html.ActionLink("Année", "Index", new { sortOrder = ViewBag.AnneeSortParm })
        </th>
        <th>
            @Html.ActionLink("Kilométrage", "Index", new { sortOrder = ViewBag.KilometrageSortParm })
        </th>
        <th>
            @Html.ActionLink("Prix", "Index", new { sortOrder = ViewBag.PrixSortParm })
        </th>
        <th>
            Département
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink(item.Titre, "Details", new { id = item.ID })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MotoProposee.Identification)
        </td>
        <td>
            @if (item.Photos.Count > 0)
            {
                <img src="~/Photo?id=@item.Photos.Find(x => x.Taille == Photo.TypeTaille.Miniature).ID" alt="Photo non disponible" />
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Annee)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.KilometrageAvecUnite)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PrixAvecUnite)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Departement.Identification)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort }))